# DD-Graph
  Welcome to HUST DD-Graph!

Existing distributed graph-processing frameworks, e.g., Pregel, GPS and Giraph, handle large-scale graphs in the memory of clusters built of commodity compute nodes for better scalability and performance. While capable of scaling out according to the size of graphs up to thousands of compute nodes, for graphs beyond a certain size, these frameworks usually require the investments of machines that are either beyond the financial capability of or unprofitable for most small and medium-sized organizations, making the deployment of their large-scale graph-computing jobs difficult if not impossible. At the other end of the spectrum of graph-processing frameworks research, the single-node disk-based graph-computing frameworks, such as GraphChi, handle large-scale graphs on one commodity computer, leading to high efficiency in the use of hardware but at the cost of low user performance and limited scalability. Motivated by this dichotomy, we propose a distributed disk-based graph-processing framework, called DD-Graph, that can process super-large graphs on a lightweight cluster while achieving the high performance of existing distributed in-memory graph-processing frameworks. This framework is written in C++. The evaluation of DD-Graph, driven by super-large scale graph datasets, shows that it is much more cost-effective than the state-of-the-art distributed in-memory graph frameworks, especially for handling super-large graphs.

How to start with ddGraph? A demo provided with a pdf document (Demo.pdf) help us to start with DD-Graph.
